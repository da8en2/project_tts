<body class="home_body">

  <div class="home_container">

    <div class="title">Weather Application</div>

    <div class="date_picker_container">
      <div class="row">
        <div class="col-md-12">
          <div class="well">
            <h2>Look Up Weather History</h2>
            <p>Pick a date for Weather history!</p>
            <div>
              <%= form_tag home_path do %>
              <div class="input-group">

                <div class="input-group">
                   <%= text_field_tag :city, @visitor_location, placeholder: "City", :required => true, class: "form-control" %>
                   <span class="input-group-addon">
                   <span class="glyphicon glyphicon-home"></span>
                </div>
                <div class='input-group date' id='datetimepicker5' >
                  <%= text_field_tag :date, nil, placeholder: "YYYY-MM-DD", :required => true, class: "form-control" %>
                  <span class="input-group-addon">
                  <span class="glyphicon glyphicon-calendar"></span>
               </div>
               <br/>
               <%= submit_tag "Show Temperature Graph", class: "btn btn-primary" %>
               <% end %>
             </div>
            </div>
          </div>
        </div>
      </div>
    </div>

    <% if @lookup_date != nil %>
    <div class="panel panel-default">
      <div class="chart">

      </div>
      <div class="panel-footer"> Temperatures in <%= @lookup_location %> on <%= @lookup_date %> </div>
    </div>
    <%end%>



    <script type="text/javascript">

    var startDate = moment().subtract(29, 'days').format('YYYY-MM-DD');
    var yesterdaysDate = moment().subtract(1, 'days').format('YYYY-MM-DD');

    $(function () {
        $('#datetimepicker5').datetimepicker({
            format: "YYYY-MM-DD",
            minDate: startDate,
            maxDate : 'now'
        });
    });

    </script>




    <script src="//d3js.org/d3.v3.min.js"></script>


    <script>

    //  var time = new Array();
    //  for (i = 0; i < 24; i++) {
        // format the time in 12 hr time format
    //    time = new Date(new Date().setHours(i, 0, 0)).toLocaleTimeString();
    //  }


      var temps = <%= @temp %>;

      var arrData = new Array();

      for (i = 0; i < 24; i++) {
        arrData.push([i , temps[i] ]);
        //arrData.push([time[i] , temps[i] ]);
      }



      // Set the dimensions of the canvas / graph
      var margin = {top: 30, right: 20, bottom: 30, left: 50},
        width = 600 - margin.left - margin.right,
        height = 270 - margin.top - margin.bottom;

      // Parse the date / time
      // var parseDate = d3.time.format("%d-%b-%y").parse;

      // Set the ranges
      //var x = d3.time.scale().range([0, width]);
      var x = d3.scale.linear().range([0, width]);

      var y = d3.scale.linear().range([height, 0]);

      // Define the axes
      var xAxis = d3.svg.axis().scale(x)
        .orient("bottom").ticks(0);

      var yAxis = d3.svg.axis().scale(y)
        .orient("left").ticks(5);

      // Define the line
      var valueline = d3.svg.line()
        .x(function(d) { return x(d.hour); })
        .y(function(d) { return y(d.temp); });

      // Adds the svg canvas
      var svg = d3.select(".chart")
          .append("svg")
              .attr("width", width + margin.left + margin.right)
              .attr("height", height + margin.top + margin.bottom)
          .append("g")
              .attr("transform",
                    "translate(" + margin.left + "," + margin.top + ")");

      // Get the data from csv
      // d3.csv("data.csv", function(error, data) {
      //     data.forEach(function(d) {
      //         d.hour = d.hour;
      //         d.temp = +d.temp;
      //     });

      // get Data from Array
      var data = arrData.map(function(d) {
          return {
             hour: d[0],
             temp: d[1]
          };

      });

      // Scale the range of the data
      x.domain(d3.extent(data, function(d) { return d.hour; }));
      y.domain([20, d3.max(data, function(d) { return d.temp; })]);
      //y.domain(d3.extent(data, function(d) { return d.temp; }));

      // Add the valueline path.
      svg.append("path")
          .attr("class", "line")
          .attr("d", valueline(data));

      // Add the X Axis
      svg.append("g")
          .attr("class", "x axis")
          .attr("transform", "translate(0," + height + ")")
          .call(xAxis);

      // Add the Y Axis
      svg.append("g")
          .attr("class", "y axis")
          .call(yAxis);

    </script>

  </div>

</body>
